# WARNING:----------------------------------------------------------------
# Do not add anything to this file unless you've *first* created the service
# definition in the puppet repo in:
#   hieradata/common/service.yaml
# and moved its state all the way to 'production' (as opposed to e.g.
# service_setup or lvs_setup), as documented in:
#   https://wikitech.wikimedia.org/wiki/LVS#Add_a_new_load_balanced_service
# and pushed that new puppet state everywhere (including the DNS servers).
#--
# Once an entry is added here, the corresponding zonefile records for the
# service hostname can be created and will pass DNS CI - the mock entry here
# and the zonefile record can be done in the same commit.
#--
# Service removal is handled in reverse order as documented in:
#   https://wikitech.wikimedia.org/wiki/LVS#Remove_a_load_balanced_service
# Which means one must first remove the relevant zonefile record(s) and the
# mock_etc entries here, and push that via authdns-update, before any
# puppet-side steps for decomming the sevice by e.g. changing its state from
# 'production' to 'lvs_setup' or a lower state (or complete removal).
# ------------------------------------------------------------------------
# mock active-active entries by copying here and changing name
disc-apus                => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-swift               => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-swift-ro            => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-restbase            => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-restbase-async      => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-search              => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-apertium            => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-citoid              => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-cxserver            => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-eventstreams        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-eventstreams-internal => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-device-analytics    => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-kartotherian        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mathoid             => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mobileapps          => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-proton              => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-push-notifications  => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-recommendation-api  => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-rest-gateway        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wdqs                => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wdqs-internal       => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wdqs-internal-main            => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wdqs-internal-scholarly       => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wdqs-main           => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wdqs-scholarly      => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-zotero              => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-eventgate-analytics => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-eventgate-main      => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-sessionstore        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-termbox             => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wikifeeds           => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-echostore           => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-schema              => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-eventgate-logging-external => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-eventgate-analytics-external => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-thanos-query        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-thanos-swift        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-thanos-web          => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-helm-charts         => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-api-gateway         => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-linkrecommendation  => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-pki                 => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-puppetdb-api        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-puppetboard         => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-shellbox            => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-shellbox-constraints => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mwdebug             => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mwdebug-next        => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mw-web-ro           => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mw-web-next-ro      => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mw-api-ext-ro       => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mw-api-ext-next-ro  => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mw-api-int-ro       => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-mw-wikifunctions-ro => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-shellbox-media      => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-shellbox-syntaxhighlight => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-shellbox-timeline   => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-shellbox-video      => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-tegola-vector-tiles => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-inference           => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-wcqs                => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-k8s-ingress-wikikube-ro => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-k8s-ingress-ml-serve => { map => mock, dcmap => { mock => 192.0.2.1 } }
disc-config-master        => { map => mock, dcmap => { mock => 192.0.2.1 } }
# disc-failoid is a geoip resource statically configured by puppet, used as
# fallback by metafo resources for active-passive discovery services.
# Included here to allow dropping traffic to an active-active service via
# failoid, by specifying geoip!disc-failoid in the DYNA record.
disc-failoid => { map => mock, dcmap => { mock => 192.0.2.1 } }
